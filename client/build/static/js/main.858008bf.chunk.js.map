{"version":3,"sources":["Components/allProjs.jsx","Components/newProj.jsx","App.js","reportWebVitals.js","index.js"],"names":["DisplayProjs","props","useState","projects","setProjects","fetch","axios","get","then","res","console","log","data","catch","err","error","useEffect","className","filter","p","status","map","proj","project","moment","format","due","onClick","e","_id","put","delete","to","AddProj","setProject","setDue","errors","setErrors","onSubmit","preventDefault","newProject","post","navigate","type","onChange","target","value","message","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.858008bf.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from '@reach/router';\r\nimport moment from 'moment';\r\n\r\n\r\nconst DisplayProjs = props => {\r\n\r\n    const [projects, setProjects]= useState([]);\r\n    // function  bubleSort(restaurants)  {\r\n    //     const arr=[...restaurants];\r\n    //     for(let i=0; i<arr.length;i++){\r\n    //         for(let j=0; j<arr.length-1;j++ ){\r\n    //             if(arr[j].ratingAverage < arr[j+1].ratingAverage ){\r\n    //                 [arr[j],arr[j+1]] = [arr[j+1],arr[j]];\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return arr;\r\n    // }\r\n    function fetch() {\r\n        axios.get(\"http://localhost:8000/api/projects\")\r\n        .then(res => {\r\n            console.log(res.data.projects);\r\n            setProjects(res.data.projects);\r\n        })\r\n        .catch(err => console.error(err))\r\n        }\r\n    useEffect(()=> {\r\n        fetch();\r\n    },[]);\r\n    const startProj = (_id) => {\r\n        axios.put(`http://localhost:8000/api/project/start/${_id}`)\r\n        .then(res => {\r\n            console.log(res.data.projects);\r\n            fetch();\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n    const completeProj = (_id) => {\r\n        axios.put(`http://localhost:8000/api/project/complete/${_id}`)\r\n        .then(res => {\r\n            console.log(res.data.projects);\r\n            fetch();\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n    const deleteProj = (_id) => {\r\n        axios.delete(`http://localhost:8000/api/project/delete/${_id}`)\r\n        .then(res => {\r\n            console.log(res.data.projects);\r\n            fetch();\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n    \r\n    return (\r\n    <div className=\"container\" >\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-4\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header \"><h2>Backlog</h2> </div>\r\n            {\r\n                projects.filter(p => p.status === \"Backlog\").map((proj ) => \r\n                        <div className=\"card-body\">\r\n                        <p>{proj.project} </p>\r\n                        {moment().format() > moment(proj.due).format()?<p >Oh!It's past due</p>: <p >Due: {moment(proj.due).format(\"MM,dd,YYYY\")}</p>}\r\n                        <botton className=\"btn btn-outline-info\" onClick={e => startProj(proj._id)}>Start Project</botton>\r\n                        </div>\r\n                )\r\n            }\r\n                </div>\r\n            </div>\r\n            <div className=\"col-sm-4\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header \"><h2>In Progress</h2> </div>\r\n            {\r\n                projects.filter(p => p.status === \"In Progress\").map((proj ) => \r\n                        <div className=\"card-body\">\r\n                        <p>{proj.project} </p>\r\n                        {/* <p>Cuurent date: {moment().format()}</p> */}\r\n                        {moment().format() > moment(proj.due).format()?<p >Oh!It's past due</p>: <p >Due: {moment(proj.due).format(\"MM,dd,YYYY\")}</p>}\r\n                        <botton className=\"btn btn-outline-success\" onClick={e => completeProj(proj._id)}>Move to Completed</botton>\r\n                        </div>\r\n                )\r\n            }\r\n                </div>\r\n            </div>\r\n            <div className=\"col-sm-4\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header \"><h2>Completed</h2> </div>\r\n            {\r\n                projects.filter(p => p.status === \"Completed\").map((proj ) => \r\n                        <div className=\"card-body\">\r\n                        <p>{proj.project} </p>\r\n                        {moment().format() > moment(proj.due).format()?<p >Oh!It's past due</p>: <p >Due: {moment(proj.due).format(\"MM,dd,YYYY\")}</p>}\r\n                        <botton className=\"btn btn-outline-danger\" onClick={e => deleteProj(proj._id)}>Remove Project</botton>\r\n                        </div>\r\n                )\r\n            }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    <Link to=\"/new\" className=\"btn btn-outline-info\" >Add A New Project</Link>\r\n    </div>\r\n    );\r\n\r\n}\r\nexport default DisplayProjs;\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Link,navigate} from '@reach/router';\r\n\r\n\r\n\r\nconst AddProj = props => {\r\n    const [project,setProject] = useState(\"\");\r\n    const [due,setDue] = useState(\"\");\r\n    const [status,setStatus] = useState(\"Backlog\");\r\n    const [errors,setErrors]= useState({});\r\n    \r\n    const addProject = (e) => {\r\n        e.preventDefault();\r\n        const newProject = {project,due,status};\r\n        axios.post(\"http://localhost:8000/api/project/new\" ,newProject)\r\n        .then(res => {\r\n            console.log(res.data.project);\r\n            if(res.data.errors){\r\n                setErrors(res.data.errors);\r\n            }\r\n            else {\r\n                navigate(\"/\");\r\n            }\r\n        })\r\n        .catch(err => console.error(err))\r\n        \r\n        }\r\n    return (\r\n    <div className=\"container\" >\r\n        <Link to=\"/\"  >Back to Dashboard</Link>\r\n        <div className=\"row my-5\">\r\n            <div className=\"col-sm-8 offset-sm-2 \">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header bg-dark text-light\"><p>Add A New Project </p></div>\r\n                    <div className=\"card body\">\r\n                        <form onSubmit={addProject}>\r\n                            <div className=\"form-group\">\r\n                                <label>Project: </label>\r\n                                <input type=\"text\"  className=\"form-control\" onChange={e => setProject(e.target.value)} value={project} />\r\n                                <p className=\"text-danger\">{ errors.project?errors.project.message:\"\"}</p>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Due Date: </label>\r\n                                <input type=\"date\"  className=\"form-control\" onChange={e => setDue(e.target.value)} value={due}/>\r\n                                <p className=\"text-danger\">{ errors.due?errors.due.message:\"\"}</p>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Add A New Project \" className=\"btn btn-primary\"/>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>              \r\n    </div>\r\n    );\r\n\r\n}\r\nexport default AddProj;\r\n\r\n\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Router } from '@reach/router';\nimport DisplayProjs from './Components/allProjs';\nimport AddProj from './Components/newProj';\n\n\nfunction App() {\n  return (\n    <div className=\"container my-t-3\" >\n      <h1>Project Manager</h1>\n      <Router >\n        <DisplayProjs path=\"/\" />\n        <AddProj path=\"/new\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}